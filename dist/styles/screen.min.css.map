{"version":3,"sources":["base/global/_font.scss","base/sass/_mixin.scss","layouts/_home.scss","base/global/_customBootstrap.scss","screen.min.css","modules/_nav.scss","base/global/_scroll.scss","base/global/_body.scss","base/sass/_themeCustom.scss"],"names":[],"mappings":"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","file":"screen.min.css","sourcesContent":["/*====== text overflow ======*/\r\n.tx-overflow, %tx-overflow {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n/*====== font color ======*/\r\n.fc-red, %fc-red {\r\n  color: map_get($colors, t-red);\r\n}\r\n.fc-blue, %fc-blue {\r\n  color: map_get($colors, t-blue);\r\n}\r\n.fc-green, %fc-green {\r\n  color: map_get($colors, t-green);\r\n}\r\n.fc-orange, %fc-orange {\r\n  color: map_get($colors, t-orange);\r\n}\r\n.fc-yellow, %fc-yellow {\r\n  color: map_get($colors, t-yellow);\r\n}\r\n.fc-white, %fc-white {\r\n  color: map_get($colors, t-white);\r\n}\r\n.fc-black, %fc-black {\r\n  color: map_get($colors, t-black);\r\n}\r\n.fc-grey, %fc-grey {\r\n  color: map_get($colors, t-grey);\r\n}\r\n.fc-grey2, %fc-grey2 {\r\n  color: map_get($colors, t-grey2);\r\n}\r\n\r\n\r\n\r\n/*====== font weight ======*/\r\n.fw-xs, %fw-xs {\r\n  font-weight: 300;\r\n}\r\n\r\n.fw-sm, %fw-sm {\r\n  font-weight: 500;\r\n}\r\n\r\n.fw-md, %fw-md {\r\n  font-weight: 700;\r\n}\r\n\r\n.fw-lg, %fw-lg {\r\n  font-weight: 900;\r\n}\r\n\r\n.fw-b, %fw-b {\r\n  font-weight: bold;\r\n}\r\n\r\n/*====== font size ======*/\r\n.fs-xs, %fs-xs {\r\n  font-size: 1.3rem;\r\n}\r\n\r\n.fs-sm, %fs-sm {\r\n  font-size: 2.3rem;\r\n}\r\n\r\n.fs-md, %fs-md {\r\n  font-size: 3rem;\r\n}\r\n\r\n.fs-lg, %fs-lg {\r\n  font-size: 3.3em;\r\n}\r\n\r\n/*====== font align ======*/\r\n.ta-c, %ta-c {\r\n  text-align: center;\r\n}\r\n\r\n.ta-l, %ta-l {\r\n  text-align: left;\r\n}\r\n\r\n.ta-r, %ta-r {\r\n  text-align: right;\r\n}\r\n\r\n/*====== font transform ======*/\r\n.tt-up, %tt-up {\r\n  text-transform: uppercase;\r\n}\r\n","// Trozo de código reutilizable dinámicamente.\r\n// @mixin mixinUno ($color){color: $color;} - llamado @include mixinUno(red);\r\n\r\n@mixin test-mixin($l-h, $fn-s, $ds-p){\r\n\tdisplay: $l-h;\r\n\tline-height: $fn-s;\r\n\tfont-size: $ds-p;\r\n\tpadding: 1em;\r\n\t@content; // permite agregar contenido al mixin en proximos llamados  @include test-mixin() { text-align: center;};\r\n}\r\n.test-mixin{\r\n\t@include test-mixin(\r\n\t\t$l-h:1em,\r\n\t\t$fn-s:12px,\r\n\t\t$ds-p:block\r\n\t\t) { text-align: center;};\r\n}\r\n\r\n/* Mixin\r\n===================================================*/\r\n\r\n\r\n/* 1. Media Queries\r\n===================================================*/\r\n\r\n@mixin bp($point) {\r\n\t@if $point == xs {\r\n\t\t@media (max-width: 480px) { @content; }\r\n\t}\r\n\t@else if $point == sm {\r\n\t\t@media (min-width: 481px) and (max-width: 768px) { @content; }\r\n\t}\r\n\t@else if $point == md {\r\n\t\t@media (min-width: 769px)  { @content; }\r\n\t}\r\n}\r\n\r\n/* 2. centrado\r\n===================================================*/\r\n$v: true;\r\n$f: false;\r\n@mixin center($horizontal: true, $vertical: true) {\r\n\tposition: absolute;\r\n\t@if ($horizontal and $vertical) {\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t} @else if ($horizontal) {\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, 0);\r\n\t} @else if ($vertical) {\r\n\t\ttop: 50%;\r\n\t\ttransform: translate(0, -50%);\r\n\t}\r\n}\r\n","body {\r\n    margin: 0;\r\n}\r\n\r\nhtml,\r\nbody {\r\n    height: 100%;\r\n}\r\n\r\n#app-root {\r\n    margin: 0;\r\n    padding: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    >div {\r\n        display: flex;\r\n        flex: 1;\r\n    }\r\n}\r\n\r\n.app-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n    .title {\r\n        font-family: sans-serif;\r\n        font-weight: lighter;\r\n    }\r\n    @include themCustom($themes) {\r\n        color: themed('textColor');\r\n        background-color: themed('backgroundColor');\r\n    }\r\n    .button {\r\n        max-width: 20em;\r\n        cursor: pointer;\r\n        border-radius: 5px;\r\n        padding: 15px 32px;\r\n        display: inline-block;\r\n        transition: color 0.1s, border-color 0.1s, background-color 0.1s;\r\n        @include themCustom($themes) {\r\n            border: themed('buttonBorder');\r\n            color: themed('buttonTextColor');\r\n            border-color: themed('buttonTextColor');\r\n            background-color: themed('buttonColor');\r\n            text-transform: themed('buttonTextTransform');\r\n            &:hover {\r\n                color: themed('buttonTextHoverColor');\r\n                border-color: themed('buttonTextHoverColor');\r\n                background-color: themed('buttonHoverColor');\r\n            }\r\n        }\r\n    }\r\n}","// center col\r\n.row-center {\r\n\tdisplay: table;\r\n\theight: 100%;\r\n\t>div {\r\n\t\tdisplay: table-cell;\r\n\t\tvertical-align: middle;\r\n\t\tfloat: none;\r\n\t}\r\n}\r\n\r\n/* scroll horizontal\r\n.container-horizontal preferible poner en .row &&  .col-horizontal en la col col-xs-6.\r\nmayor problema por fload superior.\r\n*/\r\n\r\n.container-horizontal {\r\n\tdisplay: block;\r\n\toverflow-x: auto;\r\n\toverflow-y: hidden;\r\n\twhite-space: nowrap;\r\n\t.col-horizontal {\r\n\t\tcursor: pointer;\r\n\t\tdisplay: inline-block;\r\n\t\tvertical-align: top;\r\n\t\tfloat: inherit;\r\n\t}\r\n}\r\n\r\n/**\r\n* Parallax\r\n* \t=> min height\r\n**/\r\n\r\n.parallaxBg,\r\n%parallaxBg {\r\n\tbackground-attachment: fixed !important;\r\n\tbackground-size: cover !important;\r\n\tbackground-position: 50% 50% !important;\r\n}\r\n\r\n/**\r\n* Nav fixed\r\n**/\r\n\r\n.fixed-nav {\r\n\tposition: fixed !important;\r\n\twidth: 100%;\r\n\ttop: 0;\r\n\tz-index: 1;\r\n}","@charset \"UTF-8\";.ta-c,.test-mixin{text-align:center}#app-root,.row-center,body,html{height:100%}#app-root,.app-container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-moz-box-orient:vertical;-moz-box-direction:normal}.test-mixin{display:1em;line-height:12px;font-size:block;padding:1em}#app-root,ul{margin:0;padding:0}html scrollbar{width:8px;height:10px}html scrollbar-button{width:8px;height:5px}html scrollbar-thumb{background:#999;border:71px #fff;-webkit-border-radius:31px;-moz-border-radius:31px;border-radius:31px}html scrollbar-thumb:active,html scrollbar-thumb:hover{background:#333}html scrollbar-track{background:#333;width:2px;border:3px solid #fff;-webkit-border-radius:34px;-moz-border-radius:34px;border-radius:34px}html scrollbar-track:active,html scrollbar-track:hover{background:#999}html ::-webkit-scrollbar{width:8px;height:10px}html ::-webkit-scrollbar-button{width:8px;height:5px}html ::-webkit-scrollbar-thumb{background:#999;border:71px #fff;-webkit-border-radius:31px;border-radius:31px}html ::-webkit-scrollbar-thumb:hover{background:#333}html ::-webkit-scrollbar-thumb:active{background:#333}html ::-webkit-scrollbar-track{background:#333;width:2px;border:3px solid #fff;-webkit-border-radius:34px;border-radius:34px}html ::-webkit-scrollbar-track:hover{background:#999}html ::-webkit-scrollbar-track:active{background:#999}.tx-overflow{overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;white-space:nowrap}.fc-red{color:#932e30}.fc-blue{color:#2e8b9b}.fc-green{color:#a3bd31}.fc-orange{color:#d37c32}.fc-yellow{color:#F29100}.fc-white{color:#fff}.fc-black{color:#000}.fc-grey{color:#333}.fc-grey2{color:#495057}.fw-xs{font-weight:300}.fw-sm{font-weight:500}.fw-md{font-weight:700}.fw-lg{font-weight:900}.fw-b{font-weight:700}.fs-xs{font-size:1.3rem}.fs-sm{font-size:2.3rem}.fs-md{font-size:3rem}.fs-lg{font-size:3.3em}.ta-l{text-align:left}.ta-r{text-align:right}.tt-up{text-transform:uppercase}.row-center{display:table}.row-center>div{display:table-cell;vertical-align:middle;float:none}.container-horizontal{display:block;overflow-x:auto;overflow-y:hidden;white-space:nowrap}.container-horizontal .col-horizontal{cursor:pointer;display:inline-block;vertical-align:top;float:inherit}#app-root,#app-root>div{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox}.parallaxBg{background-attachment:fixed!important;-moz-background-size:cover!important;background-size:cover!important;background-position:50% 50%!important}.fixed-nav{position:fixed!important;width:100%;top:0;z-index:1}*,::after,::before{-webkit-box-sizing:inherit;-moz-box-sizing:inherit;box-sizing:inherit}ul li{display:inline-block}body{margin:0}#app-root{display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}#app-root>div{display:flex;-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1}.app-container{display:-webkit-box;display:-webkit-flex;display:-moz-box;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:1;-webkit-flex:1;-moz-box-flex:1;-ms-flex:1;flex:1;-webkit-box-align:center;-webkit-align-items:center;-moz-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-moz-box-pack:center;-ms-flex-pack:center;justify-content:center}.app-container .title{font-family:sans-serif;font-weight:lighter}.theme-light .app-container{color:#00919f;background-color:#fff}.theme-dark .app-container{color:#e7792b;background-color:#fff}.app-container .button{max-width:20em;cursor:pointer;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;padding:15px 32px;display:inline-block;-webkit-transition:color .1s,border-color .1s,background-color .1s;-o-transition:color .1s,border-color .1s,background-color .1s;-moz-transition:color .1s,border-color .1s,background-color .1s;transition:color .1s,border-color .1s,background-color .1s}.theme-light .app-container .button{border:2px solid #00919f;color:#00919f;background-color:#fff;text-transform:none}.theme-light .app-container .button:hover{color:#00FFB1;border-color:#00FFB1}.theme-dark .app-container .button{border:2px solid #e7792b;color:#e7792b;background-color:#fff;text-transform:none}.theme-dark .app-container .button:hover{color:#00FFB1;border-color:#00FFB1}\n/*# sourceMappingURL=screen.min.css.map */\n","ul{\r\n\tmargin: 0; padding: 0;\r\n\tli{\r\n\t\tdisplay: inline-block;\r\n\t}\r\n}\r\n","/* Scroll css\r\n ============================================================*/\r\n\r\nhtml {\r\n    scrollbar {\r\n        width: 8px;\r\n        height: 10px;\r\n    }\r\n    scrollbar-button {\r\n        width: 8px;\r\n        height: 5px;\r\n    }\r\n    // btn scroll\r\n    scrollbar-thumb {\r\n        background: claro(map-get( $colors, t-grey), 40%);\r\n        border: 71px none map-get( $colors, t-white);\r\n        border-radius: 31px;\r\n    }\r\n    scrollbar-thumb:hover {\r\n        background: map-get( $colors, t-grey);\r\n    }\r\n    scrollbar-thumb:active {\r\n        background: map-get( $colors, t-grey);\r\n    }\r\n    // barra scroll\r\n    scrollbar-track {\r\n        background: map-get( $colors, t-grey);\r\n        width: 2px;\r\n        border: 3px solid map-get( $colors, t-white);\r\n        border-radius: 34px;\r\n    }\r\n    scrollbar-track:hover {\r\n        background: claro(map-get( $colors, t-grey), 40%);\r\n    }\r\n    scrollbar-track:active {\r\n        background: claro(map-get( $colors, t-grey), 40%);\r\n    }\r\n    scrollbar-corner {}\r\n    //webkit\r\n     ::-webkit-scrollbar {\r\n        width: 8px;\r\n        height: 10px;\r\n    }\r\n     ::-webkit-scrollbar-button {\r\n        width: 8px;\r\n        height: 5px;\r\n    }\r\n    // btn scroll\r\n     ::-webkit-scrollbar-thumb {\r\n        background: claro(map-get( $colors, t-grey), 40%);\r\n        border: 71px none map-get( $colors, t-white);\r\n        border-radius: 31px;\r\n    }\r\n     ::-webkit-scrollbar-thumb:hover {\r\n        background: map-get( $colors, t-grey);\r\n    }\r\n     ::-webkit-scrollbar-thumb:active {\r\n        background: map-get( $colors, t-grey);\r\n    }\r\n    // barra scroll\r\n     ::-webkit-scrollbar-track {\r\n        background: map-get( $colors, t-grey);\r\n        width: 2px;\r\n        border: 3px solid map-get( $colors, t-white);\r\n        border-radius: 34px;\r\n    }\r\n     ::-webkit-scrollbar-track:hover {\r\n        background: claro(map-get( $colors, t-grey), 40%);\r\n    }\r\n     ::-webkit-scrollbar-track:active {\r\n        background: claro(map-get( $colors, t-grey), 40%);\r\n    }\r\n     ::-webkit-scrollbar-corner {}\r\n}","*,\r\n*::after,\r\n*::before {\r\n  box-sizing: inherit;\r\n}\r\n","/**\r\n Themes Web.\r\n   => Define the theme on the map $themes.\r\n   => Class for the theme theme-$themes.key in body.\r\n   => Use of the theme:\r\n     //@include themCustom($themes) {\r\n        background-color: themed('backgroundColor');\r\n      }\r\n */\r\n\r\n\r\n/*\r\n * Theme definitions\r\n */\r\n\r\n$themes: ( light: ( backgroundColor: map_get($colors, t-white), textColor: map_get(map_get($colors, themeInfo), colorTheme-4), buttonTextColor: map_get(map_get($colors, themeInfo), colorTheme-4), buttonTextTransform: none, buttonTextHoverColor: map_get(map_get($colors, themeInfo), colorTheme-5), buttonColor : map_get(map_get($colors, themeInfo), nav-item), buttonBorder: 2px solid map_get(map_get($colors, themeInfo), colorTheme-4), ), dark: ( backgroundColor: map_get($colors, t-white), textColor: map_get(map_get($colors, themeInfo), colorTheme-2), buttonTextColor: map_get(map_get($colors, themeInfo), colorTheme-2), buttonTextTransform: none, buttonTextHoverColor: map_get(map_get($colors, themeInfo), colorTheme-5), buttonColor : map_get(map_get($colors, themeInfo), nav-item), buttonBorder: 2px solid map_get(map_get($colors, themeInfo), colorTheme-2), ), );\r\n\r\n/*\r\n * Implementation of themes\r\n */\r\n\r\n@mixin themCustom($themes:$themes) {\r\n    @each $theme,\r\n    $map in $themes {\r\n        .theme-#{$theme} & {\r\n            $theme-map: () !global;\r\n            @each $key,\r\n            $submap in $map {\r\n                $value: map-get(map-get($themes, $theme), '#{$key}');\r\n                $theme-map: map-merge($theme-map, ($key: $value)) !global;\r\n            }\r\n            @content;\r\n            $theme-map: null !global;\r\n        }\r\n    }\r\n}\r\n\r\n@function themed($key) {\r\n    @return map-get($theme-map, $key);\r\n}"]}